<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Core</name>
    </assembly>
    <members>
        <member name="T:Core.Base.Context">
            <summary>
            
            </summary>
        </member>
        <member name="M:Core.Base.Context.GetMysqlConnection(System.String)">
            <summary>
            mysql
            </summary>
            <returns></returns>
        </member>
        <member name="M:Core.Base.Context.Query``1(System.Data.IDbConnection,System.String,System.Object)">
            <summary>
            查询
            </summary>
            <typeparam name="T"></typeparam>
            <param name="db"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Base.Context.QueryFirstOrDefault``1(System.Data.IDbConnection,System.String,System.Object)">
            <summary>
            查询
            </summary>
            <typeparam name="T"></typeparam>
            <param name="db"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="T:Core.EFContext">
            <summary>
            数据库连接
            </summary>
        </member>
        <member name="T:Core.Enum.CommonEnum.DeliveryEnum">
            <summary>
            是否支持配送
            </summary>
        </member>
        <member name="F:Core.Enum.CommonEnum.DeliveryEnum.NotDelivery">
            <summary>
            不支持配送
            </summary>
        </member>
        <member name="F:Core.Enum.CommonEnum.DeliveryEnum.IsDelivery">
            <summary>
            支持配送
            </summary>
        </member>
        <member name="T:Core.Enum.CommonEnum.SelfSupportingEnum">
            <summary>
            平台自营枚举
            </summary>
        </member>
        <member name="F:Core.Enum.CommonEnum.SelfSupportingEnum.NotSelfSupporting">
            <summary>
            非平台自营
            </summary>
        </member>
        <member name="F:Core.Enum.CommonEnum.SelfSupportingEnum.IsSelfSupporting">
            <summary>
            平台自营
            </summary>
        </member>
        <member name="T:Core.Enum.CommonEnum.RefundOrderStatus">
            <summary>
            退款单状态
            </summary>
        </member>
        <member name="T:Core.Enum.CommonEnum.OrderType">
            <summary>
            订单类型
            </summary>
        </member>
        <member name="F:Core.Enum.CommonEnum.EchartsType.line">
            <summary>
            
            </summary>
        </member>
        <member name="F:Core.Enum.CommonEnum.EchartsType.bar">
            <summary>
            
            </summary>
        </member>
        <member name="F:Core.Enum.CommonEnum.EchartsType.pie">
            <summary>
            
            </summary>
        </member>
        <member name="F:Core.Enum.CommonEnum.StatusEnum.Invalid">
            <summary>
            无效
            </summary>
        </member>
        <member name="F:Core.Enum.CommonEnum.StatusEnum.Effective">
            <summary>
            有效
            </summary>
        </member>
        <member name="F:Core.Enum.CommonEnum.SpecType.BasePrice">
            <summary>
            基础价
            </summary>
        </member>
        <member name="F:Core.Enum.CommonEnum.SpecType.AddPrice">
            <summary>
            加价
            </summary>
        </member>
        <member name="F:Core.Enum.CommonEnum.IsDel.Del">
            <summary>
            删除
            </summary>
        </member>
        <member name="F:Core.Enum.CommonEnum.IsDel.Normal">
            <summary>
            正常
            </summary>
        </member>
        <member name="F:Core.Enum.CommonEnum.UnifiedorderTradeType.JSAPI">
            <summary>
            公众号支付
            </summary>
        </member>
        <member name="F:Core.Enum.CommonEnum.UnifiedorderTradeType.NATIVE">
            <summary>
            原生扫码支付
            </summary>
        </member>
        <member name="F:Core.Enum.CommonEnum.UnifiedorderTradeType.APP">
            <summary>
            app支付
            </summary>
        </member>
        <member name="F:Core.Enum.CommonEnum.OrderStatus.PendingPayment">
            <summary>
            待买家支付
            </summary>
        </member>
        <member name="F:Core.Enum.CommonEnum.OrderStatus.OrderClose">
            <summary>
            订单已关闭
            </summary>
        </member>
        <member name="F:Core.Enum.CommonEnum.OrderStatus.PaymentSuccess">
            <summary>
            买家已支付
            </summary>
        </member>
        <member name="F:Core.Enum.CommonEnum.OrderStatus.TransactionSuccess">
            <summary>
            交易结束
            </summary>
        </member>
        <member name="F:Core.Enum.CommonEnum.OrderStatus.Refund">
            <summary>
            全额退款
            </summary>
        </member>
        <member name="T:Core.Enum.CommonEnum.PersonHouseType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Core.Enum.CommonEnum.HouseType">
            <summary>
            房屋居住类型
            </summary>
        </member>
        <member name="T:Core.Enum.CommonEnum.CouponType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Core.Enum.CommonEnum.CouponRulesStatus">
            <summary>
            
            </summary>
        </member>
        <member name="T:Core.Enum.CommonEnum.ValidityPeriodType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Core.Enum.CommonEnum.PersonalInventoryStatusEnum.Effective">
            <summary>
            有效
            </summary>
        </member>
        <member name="F:Core.Enum.CommonEnum.PersonalInventoryStatusEnum.RefundOrCancle">
            <summary>
            退款/任务取消
            </summary>
        </member>
        <member name="F:Core.Enum.CommonEnum.PersonalInventoryStatusEnum.Invalid">
            <summary>
            无效
            </summary>
        </member>
        <member name="F:Core.Enum.ErrCodeCommon.DataIsnotExist">
            <summary>
            1001-数据不存在
            </summary>
        </member>
        <member name="F:Core.Enum.ErrCodeCommon.LoginError">
            <summary>
            帐号或密码错误
            </summary>
        </member>
        <member name="F:Core.Enum.ErrCodeCommon.InsertError">
            <summary>
            添加失败
            </summary>
        </member>
        <member name="F:Core.Enum.ErrCodeCommon.EditError">
            <summary>
            编辑失败
            </summary>
        </member>
        <member name="F:Core.Enum.ErrCodeCommon.RegisterError">
            <summary>
            用户名已存在
            </summary>
        </member>
        <member name="F:Core.Enum.ErrCodeCommon.AddCatalogErr">
            <summary>
            类同一级别不可重复
            </summary>
        </member>
        <member name="F:Core.Enum.ErrCodeCommon.CatalogEditErr">
            <summary>
             类别及其子类别已被使用
            </summary>
        </member>
        <member name="T:Core.Enum.HealthCardYKHJEnum">
            <summary>
            用卡环节
            </summary>
        </member>
        <member name="T:Core.Enum.HealthCardYKHJEnum.GHEnum">
            <summary>
            挂号
            </summary>
        </member>
        <member name="F:Core.Enum.HealthCardYKHJEnum.GHEnum.YYGH">
            <summary>
            预约挂号
            </summary>
        </member>
        <member name="F:Core.Enum.HealthCardYKHJEnum.GHEnum.DRGH">
            <summary>
            当日挂号
            </summary>
        </member>
        <member name="F:Core.Enum.HealthCardYKHJEnum.GHEnum.GHJL">
            <summary>
            挂号记录
            </summary>
        </member>
        <member name="F:Core.Enum.HealthCardYKHJEnum.GHEnum.YYDZ">
            <summary>
            预约导诊
            </summary>
        </member>
        <member name="T:Core.Enum.HealthCardYKQDEnum">
            <summary>
            用卡渠道
            </summary>
        </member>
        <member name="F:Core.Enum.HealthCardYKQDEnum.RGCK">
            <summary>
            人工窗口
            </summary>
        </member>
        <member name="F:Core.Enum.HealthCardYKQDEnum.ZZJ">
            <summary>
            人工窗口
            </summary>
        </member>
        <member name="F:Core.Enum.HealthCardYKQDEnum.YSGZT">
            <summary>
            人工窗口
            </summary>
        </member>
        <member name="F:Core.Enum.HealthCardYKQDEnum.FWH">
            <summary>
            人工窗口
            </summary>
        </member>
        <member name="F:Core.Enum.HealthCardYKQDEnum.XCX">
            <summary>
            人工窗口
            </summary>
        </member>
        <member name="P:Core.Extensions.AuthExtension.CodeExchangeAccessTokenResponseDomainModel.AccessToken">
            <summary>
            AccessToken
            </summary>
        </member>
        <member name="P:Core.Extensions.AuthExtension.CodeExchangeAccessTokenResponseDomainModel.ExpiresIn">
            <summary>
            AccessToken有效时长（秒）
            </summary>
        </member>
        <member name="P:Core.Extensions.AuthExtension.CodeExchangeAccessTokenResponseDomainModel.RefreshToken">
            <summary>
            RefreshToken有效期限30分钟
            </summary>
        </member>
        <member name="M:Core.Extensions.AuthExtension.AuthCenterExchange.CodeExchangeUserInfo(System.String,System.String)">
            <summary>
            code换取用户信息
            </summary>
            <param name="redirectUri"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Extensions.AuthExtension.AuthCenterExchange.CodeExchangeAccessToken(System.String,System.String)">
            <summary>
            Code换取AccessToken
            </summary>
            <param name="redirectUri"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Extensions.AuthExtension.AuthCenterExchange.AccessTokenExchangeUserInfo(System.String)">
            <summary>
            ACCESSToken换取用户信息
            </summary>
            <param name="accessToken"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="T:Core.Extensions.AuthExtension.IWorkContextStateProvider">
            <summary>
            实现此接口存储工作上下文中的状态。
            </summary>
        </member>
        <member name="M:Core.Extensions.AuthExtension.IWorkContextStateProvider.Get(System.String)">
            <summary>
            根据给定上下文获取存储对象。
            </summary>
            <param name="name">状态名称。</param>
            <returns>一个状态对象构造器。</returns>
        </member>
        <member name="P:Core.Extensions.AuthExtension.WorkContext.CurrentUser">
            <summary>
            获取或设置当前用户。
            </summary>
        </member>
        <member name="T:Core.Extensions.ConfigExtensions">
            <summary>
            读取配置文件信息
            </summary>
        </member>
        <member name="M:Core.Extensions.ConfigExtensions.GetJson(System.String,System.String)">
            <summary>
            获得配置文件的对象值
            </summary>
            <param name="jsonPath"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Extensions.ConfigExtensions.GetAppSettings``1(System.String,System.String)">
            <summary>
            根据配置文件和Key获得对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fileName">文件名称</param>
            <param name="key">节点Key</param>
            <returns></returns>
        </member>
        <member name="F:Core.Extensions.ConfigurationManager._configurationCollection">
            <summary>
            配置内容
            </summary>
        </member>
        <member name="F:Core.Extensions.ConfigurationManager.FileListeners">
            <summary>
            配置监听响应链堆栈
            </summary>
        </member>
        <member name="F:Core.Extensions.ConfigurationManager._defaultPath">
            <summary>
            默认路径
            </summary>
        </member>
        <member name="F:Core.Extensions.ConfigurationManager._configPath">
            <summary>
            最终配置文件路径
            </summary>
        </member>
        <member name="F:Core.Extensions.ConfigurationManager._configSection">
            <summary>
            配置节点关键字
            </summary>
        </member>
        <member name="F:Core.Extensions.ConfigurationManager._configUrlPostfix">
            <summary>
            配置外连接的后缀
            </summary>
        </member>
        <member name="F:Core.Extensions.ConfigurationManager._timeStamp">
            <summary>
            最终修改时间戳
            </summary>
        </member>
        <member name="P:Core.Extensions.ConfigurationManager._configUrlSection">
            <summary>
            配置外链关键词，例如：AppSettings.Url
            </summary>
        </member>
        <member name="M:Core.Extensions.ConfigurationManager.ConfigFinder(System.String)">
            <summary>
            确定配置文件路径
            </summary>
        </member>
        <member name="M:Core.Extensions.ConfigurationManager.LoadConfiguration">
            <summary>
            读取配置文件内容
            </summary>
        </member>
        <member name="M:Core.Extensions.ConfigurationManager.LoadJsonFile(System.String)">
            <summary>
            解析Json文件
            </summary>
            <param name="FilePath">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:Core.Extensions.ConfigurationManager.CreateListener(System.IO.FileInfo)">
            <summary>
            添加监听树节点
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Extensions.DI.AttributeDIExtension.IsNonAbstractClass(System.Type,System.Boolean)">
            <summary>
            对程序集里的类型进行筛选
            </summary>
            <param name="type"></param>
            <param name="publicOnly"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Extensions.DI.AttributeDIExtension.GetServiceTypes(System.Type,Core.Extensions.DI.ServiceDescriptorAttribute)">
             <summary>
            判断接口和实例是否一致能够分配
             </summary>
             <param name="type"></param>
             <param name="attribute"></param>
             <returns></returns>
        </member>
        <member name="T:Core.Extensions.DI.ISingletonDependency">
            <summary>
            标记一个类型为依赖项（使用此接口的依赖项生命周期为 singleton）。
            </summary>
        </member>
        <member name="T:Core.Extensions.DI.ITransientDependency">
            <summary>
            标记一个类型为依赖项（使用此接口的依赖项生命周期为 per usage）。 
            </summary>
        </member>
        <member name="M:Core.Extentions.CacheExtentions.WithCacheQuery``1(System.String,System.Func{System.Threading.Tasks.Task{``0}},System.Predicate{``0},System.TimeSpan,System.Boolean)">
            <summary>
            异步查询数据使用缓存
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheManager"></param>
            <param name="key">缓存键</param>
            <param name="getData">数据获取逻辑</param>
            <param name="checkData">数据验证逻辑</param>
            <param name="expires">过期时间</param>
            <param name="useSlidingExpiration">是否使用滑动机制</param>
            <returns></returns>
        </member>
        <member name="M:Core.Extentions.CacheExtentions.WithCacheQuerySync``1(System.String,System.Func{``0},System.Predicate{``0},System.TimeSpan,System.Boolean)">
            <summary>
            同步查询数据使用缓存
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheManager"></param>
            <param name="key">缓存键</param>
            <param name="getData">数据获取逻辑</param>
            <param name="checkData">数据验证逻辑</param>
            <param name="expires">过期时间</param>
            <param name="useSlidingExpiration">是否使用滑动机制</param>
            <returns></returns>
        </member>
        <member name="T:Core.Extentions.ISessionService">
            <summary>
            Redis用户信息操作
            </summary>
        </member>
        <member name="M:Core.Extentions.ISessionService.GetSession``1(System.String)">
            <summary>
            获取用户资料
            </summary>
            <param name="token">用户token</param>
            <returns></returns>
        </member>
        <member name="M:Core.Extentions.ISessionService.RemoveToken(System.String)">
            <summary>
            移除Token信息
            </summary>
            <param name="token">用户token</param>
        </member>
        <member name="M:Core.Extentions.ISessionService.SetSession``1(System.String,``0,System.TimeSpan,StackExchange.Redis.CommandFlags,System.Boolean)">
            <summary>
            添加用户Session
            </summary>
            <param name="token">用户token</param>
            <param name="userSession">用户Session</param>
        </member>
        <member name="P:Core.Extentions.UserSession.Id">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="P:Core.Extentions.UserSession.PhoneNumber">
            <summary>
            用户手机号
            </summary>
        </member>
        <member name="P:Core.Extentions.UserSession.Name">
            <summary>
            页面展示的用户名
            </summary>
        </member>
        <member name="P:Core.Extentions.UserSession.LoginTime">
            <summary>
            登录时间
            </summary>
        </member>
        <member name="P:Core.Extentions.UserSession.OrganizationCode">
            <summary>
            机构号
            </summary>
        </member>
        <member name="P:Core.Extentions.UserSession.OpenId">
            <summary>
            微信openId
            </summary>
        </member>
        <member name="P:Core.Extentions.UserSession.Unionid">
            <summary>
            微信Unionid
            </summary>
        </member>
        <member name="P:Core.Extentions.UserSession.AliUserId">
            <summary>
            阿里用户ID
            </summary>
        </member>
        <member name="P:Core.Extentions.UserSession.AliAccessToken">
            <summary>
            阿里AccessToken
            </summary>
        </member>
        <member name="T:Core.Filter.AuthAttribute">
            <summary>
            身份验证
            </summary>
        </member>
        <member name="P:Core.Filter.JsonErrorResponse.Message">
            <summary>
            生产环境的消息
            </summary>
        </member>
        <member name="P:Core.Filter.JsonErrorResponse.DevelopmentMessage">
            <summary>
            开发环境的消息
            </summary>
        </member>
        <member name="T:Core.Filter.UserOperationException">
            <summary>
            操作日志
            </summary>
        </member>
        <member name="T:Core.Filter.NoToken">
            <summary>
            不进行验证
            </summary>
        </member>
        <member name="M:Core.Helper.CryptoHelper.DecodeAES256ECB(System.String,System.String)">
            <summary>
            AES-256-ECB字符解密
            </summary>
            <param name="s">要解密字符串</param>
            <param name="key">密钥</param>
            <returns></returns>
        </member>
        <member name="M:Core.Helper.CryptoHelper.AESEncrypt(System.String,System.String,System.String)">
            <summary>  
            AES加密  
            </summary>  
            <param name="Data">被加密的明文</param>  
            <param name="Key">密钥</param>  
            <param name="Vector">向量</param>  
            <returns>密文</returns>  
        </member>
        <member name="M:Core.Helpers.DateHelper.GetTimeStamp">
            <summary>
            当前时间秒
            </summary>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.DateHelper.GetTimeStampTotalseconds(System.DateTime)">
            <summary>
            时间转UTC秒
            </summary>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.DateHelper.GetTimeStampTotalMilliseconds(System.DateTime)">
            <summary>
            毫秒
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.DateHelper.UnixSecondsTimestampToDateTime(System.Int64)">
            <summary>
            时间戳转日期（秒）
            </summary>
            <param name="unix"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.DateHelper.UnixMillisecondsTimestampToDateTime(System.Int64)">
            <summary>
            时间戳转日期（毫秒）
            </summary>
            <param name="unix"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.EnumDescriptionHelper.GetEnumDescription(System.Enum)">
            <summary>
            获取枚举类子项描述信息
            </summary>
            <param name="enumSubitem">枚举类子项</param>        
        </member>
        <!-- Badly formed XML comment ignored for member "M:Core.Helpers.EnumToListHelper.EnumToList``1" -->
        <member name="T:Core.Helpers.EnumToListHelper.EnumberEntity">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Helpers.EnumToListHelper.EnumberEntity.EnumName">
            <summary>
            枚举名称
            </summary>
        </member>
        <member name="P:Core.Helpers.EnumToListHelper.EnumberEntity.EnumValue">
            <summary>
            枚举值
            </summary>
        </member>
        <member name="P:Core.Helpers.EnumToListHelper.EnumberEntity.Desction">
            <summary>
            枚举描述
            </summary>
        </member>
        <member name="M:Core.Helpers.FormatHelper.XMLToSortedDictionary(System.String)">
            <summary>
            XML TO SortedDictionary
            </summary>
            <param name="xml"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.FormatHelper.JsonWriteToXML(System.String)">
            <summary>
            JsonToXML
            </summary>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.FormatHelper.Byte2HexStr(System.Byte[])">
            <summary>
            ByteTo16进制数据
            </summary>
            <param name="b"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Core.Helpers.FormatHelper.String2Unicode(System.String)" -->
        <member name="M:Core.Helpers.FormatHelper.deUnicode(System.String)">
            <summary>
            //
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.FormatHelper.HexASCIIToSting(System.String)">
            <summary>
            16进制转ASCCI对照表字符
            </summary>
            <param name="hexStr"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.FtpHelper.FTPUploadFiles(System.String,System.String)">
            <summary>
            ftp 批量上传
            </summary>
            <param name="redisKey"></param>
            <param name="ftpPath"></param>
        </member>
        <member name="P:Core.Helpers.FtpHelper.FtpInfo.Path">
            <summary>
            文件路径
            </summary>
        </member>
        <member name="P:Core.Helpers.FtpHelper.FtpInfo.Name">
            <summary>
            文件名
            </summary>
        </member>
        <member name="P:Core.Helpers.FtpHelper.FtpInfo.FtpPath">
            <summary>
            FTP文件路径
            </summary>
        </member>
        <member name="P:Core.Helpers.FtpHelper.FtpInfo.SnapRecordId">
            <summary>
            
            </summary>
        </member>
        <member name="M:Core.Helpers.HealthCardHelper.GetAppToken(System.String,System.String,System.String,System.String)">
            <summary>
            获取APPTOKEN
            </summary>
            <param name="appId"></param>
            <param name="domain"></param>
            <param name="appSecret"></param>
            <param name="hospitalID"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.HealthCardHelper.RegisterHealthCard(com.tencent.healthcard.HealthCardOpenAPI.RegisterHealthCardReq,System.String,System.String,System.String,System.String)">
            <summary>
            注册健康卡
            </summary>
            <param name="registerHealthCardReq"></param>
            <param name="appToken"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.HealthCardHelper.RegisterBatchHealthCard(com.tencent.healthcard.HealthCardOpenAPI.RegisterBatchHealthCardReq,System.String,System.String,System.String,System.String)">
            <summary>
            批量注册健康卡
            </summary>
            <param name="registerBatchHealthCardReq"></param>
            <param name="appToken"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.HealthCardHelper.OcrInfo(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            身份证OCR
            </summary>
            <param name="imageContent"></param>
            <param name="domain"></param>
            <param name="appSecret"></param>
            <param name="hospitalID"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.HealthCardHelper.ReportHISData(com.tencent.healthcard.HealthCardOpenAPI.ReportHISDataReq,System.String,System.String,System.String,System.String)">
            <summary>
            用卡数据监测接口
            </summary>
            <param name="reportHISDataReq"></param>
            <param name="appToken"></param>
            <param name="domain"></param>
            <param name="appSecret"></param>
            <param name="hospitalID"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.HealthCardHelper.BindCardRelation(com.tencent.healthcard.HealthCardOpenAPI.BindCardRelationReq,System.String,System.String,System.String,System.String)">
            <summary>
            绑定院内ID和健康卡关系
            </summary>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.HealthCardHelper.GetHealthCardByHealthCode(com.tencent.healthcard.HealthCardOpenAPI.GetHealthCardByHealthCodeReq,System.String,System.String,System.String,System.String)">
            <summary>
            通过健康卡授权码获取健康卡接口
            </summary>
            <param name="getHealthCardByHealthCodeReq"></param>
            <param name="appToken"></param>
            <param name="domain"></param>
            <param name="appSecret"></param>
            <param name="hospitalID"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.HealthCardHelper.GetOrderIdByOutAppId(com.tencent.healthcard.HealthCardOpenAPI.GetOrderIdByOutAppIdReq,System.String,System.String,System.String,System.String)">
            <summary>
            获取卡包订单ID接口
            </summary>
            <param name="getOrderIdByOutAppIdReq"></param>
            <param name="appToken"></param>
            <param name="domain"></param>
            <param name="appSecret"></param>
            <param name="hospitalID"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.HttpHelper.GetStream(System.String)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="P:Core.Helpers.HttpHelper.Headers.HeadersName">
            <summary>
            添加头的名字
            </summary>
        </member>
        <member name="P:Core.Helpers.HttpHelper.Headers.HeadersValue">
            <summary>
            添加头的值
            </summary>
        </member>
        <member name="M:Core.Helpers.IdCardHelper.CheckIDCard(System.String)">
            <summary>
            验证身份证号码
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.IdCardHelper.GetBrithdayFromIdCard(System.String)">
            <summary>
            根据身份证号获取生日
            </summary>
            <param name="IdCard"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.IdCardHelper.GetSexFromIdCard(System.String)">
            <summary>
            根据身份证获取性别
            </summary>
            <param name="IdCard"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.ImageHelper.Base64ToImage(System.String,System.Int64,System.String,System.String)">
            <summary>
            base64转图片
            </summary>
            <param name="base64"></param>
            <param name="id"></param>
            <param name="webRootPath"></param>
            <param name="folderName"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.ImageHelper.UrlToBase64(System.String)">
            <summary>
            urlimg to base64
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.ImageHelper.UrlToBytes(System.String)">
            <summary>
            urlimg to base64
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.ImageHelper.BytesToImage(System.Byte[])">
            <summary>
            bytes to image
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Core.Helpers.ImageHelper.BytesToBase64(System.Byte[])">
            <summary>
            bytesTo64
            </summary>
            <param name="Bytes"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.InsertHelper.ToDataTable``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            todatatable
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Core.Helpers.InsertHelper.SaveListtoCsv``1(System.Collections.Generic.List{``0},System.String)" -->
        <member name="M:Core.Helpers.InsertHelper.ToCsv(System.Data.DataTable)">
             <summary>
            将DataTable转换为标准的CSV
             </summary>
             <param name="table">数据表</param>
             <returns>返回标准的CSV</returns>
        </member>
        <member name="M:Core.Helpers.InsertHelper.BulkLoad``1(MySql.Data.MySqlClient.MySqlConnection,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            批量导入
            </summary>
            <param name="_mySqlConnection"></param>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.JPushHelper.JPushByPhoneAsync(Core.Helpers.JPushByPhoneAsyncReuestDomainModel)">
            <summary>
            极光推送
            </summary>
            <param name="req"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.JPushHelper.GetCidAsync(System.Int32)">
            <summary>
            获取Cid
            </summary>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="P:Core.Helpers.JPushInfoResponse.Alert">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Helpers.JPushInfoResponse.Json">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Helpers.JPushInfoResponse.Cid">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Helpers.JPushInfoResponse.Url">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Helpers.JPushInfoResponse.Alias">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Helpers.JPushInfoResponse.CreateTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Helpers.JPushInfoResponse.Response">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Helpers.AndroidNotification.alert">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:Core.Helpers.AndroidNotification.title">
            <summary>
            标题
            </summary>
        </member>
        <member name="M:Core.Helpers.LatLonHelper.GetAround(System.Double,System.Double,System.Int32)">
            <summary>
            根据提供的经度和纬度、以及半径，取得此半径内的最大最小经纬度
            </summary>
            <param name="lat">纬度</param>
            <param name="lon">经度</param>
            <param name="raidus">半径(米)</param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.LatLonHelper.GetDistance(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            根据提供的两个经纬度计算距离(米)
            </summary>
            <param name="lng1">经度1</param>
            <param name="lat1">纬度1</param>
            <param name="lng2">经度2</param>
            <param name="lat2">纬度2</param>
            <returns></returns>
        </member>
        <member name="P:Core.Helpers.RedisHelper.Instance">
            <summary>w
            使用一个静态属性来返回已连接的实例，如下列中所示。这样，一旦 ConnectionMultiplexer 断开连接，便可以初始化新的连接实例。
            </summary>
        </member>
        <member name="M:Core.Helpers.RedisHelper.Removes(System.String[])">
            <summary>
            批量删除
            </summary>
            <param name="keys"></param>
        </member>
        <member name="M:Core.Helpers.RedisHelper.MergeKey(System.String)">
            <summary>
            这里的 MergeKey 用来拼接 Key 的前缀，具体不同的业务模块使用不同的前缀。
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.RedisHelper.Get``1(System.String)">
            <summary>
            根据key获取缓存对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.RedisHelper.Set(System.String,System.Object,System.TimeSpan,StackExchange.Redis.CommandFlags,System.Boolean)">
            <summary>
            设置缓存
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="time"></param>
            <param name="flags"></param>
            <param name="slide"></param>
        </member>
        <member name="M:Core.Helpers.RedisHelper.Exists(System.String)">
            <summary>
            判断在缓存中是否存在该key的缓存数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.RedisHelper.Remove(System.String)">
            <summary>
            移除指定key的缓存
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.RedisHelper.RemoveNotMergeKey(System.String)">
            <summary>
            移除指定key的缓存
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.RedisHelper.SetAsync(System.String,System.Object,System.TimeSpan,StackExchange.Redis.CommandFlags,System.Boolean)">
            <summary>
            异步设置
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:Core.Helpers.RedisHelper.ExistPatternKey(System.String)">
            <summary>
            判断是否存在包含keyPattern的key
            </summary>
            <param name="keyPattern"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.ReducedImageHelper.ReducedImage(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            图片压缩
            </summary>
            <param name="path"></param>
            <param name="name"></param>
            <param name="width"></param>
            <param name="height">不填高度 等比压缩</param>
            <returns></returns>
        </member>
        <member name="T:Core.Helpers.SnowflakeHelper">
            <summary>
            动态生产有规律的ID
            </summary>
        </member>
        <member name="P:Core.Helpers.SnowflakeHelper.IdWorker">
            <summary>
            使用一个静态属性来返回已连接的实例，如下列中所示。这样，一旦 ConnectionMultiplexer 断开连接，便可以初始化新的连接实例。
            </summary>
        </member>
        <member name="M:Core.Helpers.SnowflakeHelper.GetTimestamp">
            <summary>
            生成当前时间戳
            </summary>
            <returns>毫秒</returns>
        </member>
        <member name="M:Core.Helpers.SnowflakeHelper.GetNextTimestamp(System.Int64)">
            <summary>
            获取下一微秒时间戳
            </summary>
            <param name="lastTimestamp"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.SnowflakeHelper.GetId">
            <summary>
            获取长整形的ID
            </summary>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.Sign.AppSign(System.Int64,System.String,System.String,System.String,System.Int64)">
            生成 Authorization 签名字段
            
            @param appId
            @param secretId
            @param secretKey
            @param bucketName
            @param expired
            @return
            @throws Exception
        </member>
        <member name="M:Core.Helpers.Sign.Base64Encode(System.Byte[])">
            生成 base64 编码
            
            @param binaryData
            @return
        </member>
        <member name="M:Core.Helpers.Sign.HmacSha1(System.Byte[],System.String)">
            生成 hmacsha1 签名
            
            @param binaryData
            @param key
            @return
            @throws Exception
        </member>
        <member name="M:Core.Helpers.Sign.HmacSha1(System.String,System.String)">
            生成 hmacsha1 签名
            
            @param plainText
            @param key
            @return
            @throws Exception
        </member>
        <member name="M:Core.Helpers.TencentCloudHelper.AppSign(System.Int64)">
            <summary>
            腾讯云OCR签名
            </summary>
            <param name="minutes"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.TencentCloudHelper.OCRIdCard``1(System.String[])">
            <summary>
            OCR-身份证识别
            </summary>
            <typeparam name="T">OCRIdCardFonrtDomainModel 或 OCIdCardBackDomainModel</typeparam>
            <param name="paths"></param>
            <returns></returns>
        </member>
        <member name="P:Core.Helpers.TencentCloudHelper.OCRIdCardResponseData`1.Code">
            <summary>
            错误码，0为成功。
            </summary>
        </member>
        <member name="P:Core.Helpers.TencentCloudHelper.OCRIdCardResponseData`1.Message">
            <summary>
            错误描述。
            </summary>
        </member>
        <member name="P:Core.Helpers.TencentCloudHelper.OCRIdCardResponseData`1.Url">
            <summary>
            当前图片的 url。
            </summary>
        </member>
        <member name="P:Core.Helpers.TencentCloudHelper.OCRIdCardResponseData`1.Data">
            <summary>
            具体查询数据，内容见下表。
            </summary>
        </member>
        <member name="P:Core.Helpers.TencentCloudHelper.OCRIdCardFonrtDomainModel.Name">
            <summary>
            姓名
            </summary>
        </member>
        <member name="P:Core.Helpers.TencentCloudHelper.OCRIdCardFonrtDomainModel.Sex">
            <summary>
            性别
            </summary>
        </member>
        <member name="P:Core.Helpers.TencentCloudHelper.OCRIdCardFonrtDomainModel.Nation">
            <summary>
            民族
            </summary>
        </member>
        <member name="P:Core.Helpers.TencentCloudHelper.OCRIdCardFonrtDomainModel.Birth">
            <summary>
            出生日期
            </summary>
        </member>
        <member name="P:Core.Helpers.TencentCloudHelper.OCRIdCardFonrtDomainModel.Address">
            <summary>
            地址
            </summary>
        </member>
        <member name="P:Core.Helpers.TencentCloudHelper.OCRIdCardFonrtDomainModel.Id">
            <summary>
            身份证号
            </summary>
        </member>
        <member name="P:Core.Helpers.TencentCloudHelper.OCRIdCardFonrtDomainModel.Name_confidence_all">
            <summary>
            证件姓名置信度，取值范围[0, 100]
            </summary>
        </member>
        <member name="P:Core.Helpers.TencentCloudHelper.OCRIdCardFonrtDomainModel.Sex_confidence_all">
            <summary>
             性别置信度，取值范围[0, 100]
            </summary>
        </member>
        <member name="P:Core.Helpers.TencentCloudHelper.OCRIdCardFonrtDomainModel.Nation_confidence_all">
            <summary>
             民族置信度，取值范围[0, 100]
            </summary>
        </member>
        <member name="P:Core.Helpers.TencentCloudHelper.OCRIdCardFonrtDomainModel.Birth_confidence_all">
            <summary>
            出生日期置信度，取值范围[0, 100]
            </summary>
        </member>
        <member name="P:Core.Helpers.TencentCloudHelper.OCRIdCardFonrtDomainModel.Address_confidence_all">
            <summary>
            地址置信度，取值范围[0, 100]
            </summary>
        </member>
        <member name="P:Core.Helpers.TencentCloudHelper.OCRIdCardFonrtDomainModel.Id_confidence_all">
            <summary>
            身份证号置信度,，取值范围[0, 100]
            </summary>
        </member>
        <member name="P:Core.Helpers.TencentCloudHelper.OCIdCardBackDomainModel.Authority">
            <summary>
            发证机关
            </summary>
        </member>
        <member name="P:Core.Helpers.TencentCloudHelper.OCIdCardBackDomainModel.Valid_date">
            <summary>
            证件有效期
            </summary>
        </member>
        <member name="P:Core.Helpers.TencentCloudHelper.OCIdCardBackDomainModel.Authority_confidence_all">
             <summary>
            发证机关置信度，取值范围[0, 100]
             </summary>
        </member>
        <member name="P:Core.Helpers.TencentCloudHelper.OCIdCardBackDomainModel.Valid_date_confidence_all">
            <summary>
            证件有效期置信度，取值范围[0, 100]
            </summary>
        </member>
        <member name="M:Core.Helpers.VerificationCodeHelper.RndNum(System.Int32)">
            <summary>  
            该方法用于生成指定位数的随机数  
            </summary>  
            <param name="VcodeNum">参数是随机数的位数</param>  
            <returns>返回一个随机数字符串</returns>  
        </member>
        <member name="M:Core.Helpers.VerificationCodeHelper.RndNumOnlyNum(System.Int32)">
            <summary>
            生成数字
            </summary>
            <param name="VcodeNum"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.VerificationCodeHelper.Create(System.String@,System.Int32)">
            <summary>  
            该方法是将生成的随机数写入图像文件  
            </summary>  
            <param name="code">code是一个随机数</param>
            <param name="numbers">生成位数（默认4位）</param>  
        </member>
        <member name="M:Core.Helpers.VerificationCodeHelper.RandomByte(System.Int32)">
            <summary>
            生成指定长度的随机Byte
            </summary>
            <param name="num"></param>
            <returns></returns>
        </member>
        <member name="P:Core.Helpers.WeiXin.MP.TemplateMessageSendReuestDomainModel.access_token">
            <summary>
            接口调用凭证
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.MP.TemplateMessageSendReuestDomainModel.touser">
            <summary>
            接收者（用户）的 openid
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.MP.TemplateMessageSendReuestDomainModel.template_id">
            <summary>
            所需下发的模板消息的id
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.MP.TemplateMessageSendReuestDomainModel.page">
            <summary>
            点击模板卡片后的跳转页面，仅限本小程序内的页面。支持带参数,（示例index?foo=bar）。该字段不填则模板无跳转。
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.MP.TemplateMessageSendReuestDomainModel.form_id">
            <summary>
            表单提交场景下，为 submit 事件带上的 formId；支付场景下，为本次支付的 prepay_id
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.MP.TemplateMessageSendReuestDomainModel.data">
            <summary>
            模板内容，不填则下发空模板。具体格式请参考示例。
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.MP.TemplateMessageSendReuestDomainModel.emphasis_keyword">
            <summary>
            模板需要放大的关键词，不填则默认无放大
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.Pay.RefundRequestDomainModel.Type">
            <summary>
            订单类型
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.Pay.RefundRequestDomainModel.OutRefundNo">
            <summary>
            商户系统内部的退款单号，商户系统内部唯一，只能是数字、大小写字母_-|*@ ，同一退款单号多次请求只退一笔。
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.Pay.RefundRequestDomainModel.OutTradeNo">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.Pay.RefundRequestDomainModel.RefundFee">
            <summary>
            退款金额
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.Pay.RefundRequestDomainModel.TransactionId">
            <summary>
            微信订单号
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.Pay.RefundRequestDomainModel.sign">
            <summary>
            签名 
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.Pay.RefundRequestDomainModel.Key">
            <summary>
            可不提供 根据APPID查询
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.Pay.RefundMchRequestDomainModel.TransactionId">
            <summary>
            微信订单号
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.Pay.RefundMchRequestDomainModel.OutTradeNo">
            <summary>
            商户订单号	
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.Pay.RefundMchRequestDomainModel.OutRefundNo">
            <summary>
            商户系统内部的退款单号，商户系统内部唯一，只能是数字、大小写字母_-|*@ ，同一退款单号多次请求只退一笔。
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.Pay.RefundMchRequestDomainModel.TotalFee">
            <summary>
            订单金额
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.Pay.RefundMchRequestDomainModel.refund_fee">
            <summary>
            退款金额
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.Pay.RefundMchRequestDomainModel.sign">
            <summary>
            签名 
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.Pay.RefundResponsedata.ReturnCode">
            <summary>
            SUCCESS/FAIL SUCCESS退款申请接收成功，结果通过退款查询接口查询 FAIL 提交业务失败
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.Pay.RefundResponsedata.ErrCode">
            <summary>
            列表详见错误码列表
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.Pay.RefundResponsedata.ResultCode">
            <summary>
            业务结果，SUCCESS/FAIL 
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.Pay.RefundResponsedata.OutTradeNo">
            <summary>
            交易订单号
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.Pay.RefundResponsedata.OutRefundNo">
            <summary>
            退款订单号
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.Pay.RefundResponsedata.RefundId">
            <summary>
            退款订单号
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.Pay.RefundResponsedata.RefundChannel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.Pay.RefundResponsedata.RefundFee">
            <summary>
            退款金额
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.Pay.RefundOrderSubmitRequestDomainModel.RefundOrderNumber">
            <summary>
            退款单号
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.Pay.RefundOrderSubmitRequestDomainModel.OrderNumber">
            <summary>
            订单号
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.Pay.RefundOrderSubmitRequestDomainModel.ReturnAmount">
            <summary>
            退款金额(元)
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.Pay.RefundOrderSubmitRequestDomainModel.Body">
            <summary>
            描述 
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.Pay.AliRefundBizContentDomainModel.trade_no">
            <summary>
            支付宝交易号
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.Pay.AliRefundBizContentDomainModel.out_trade_no">
            <summary>
            商户订单号
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.Pay.AliRefundBizContentDomainModel.refund_amount">
            <summary>
            需要退款的金额（分）
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.Pay.AliRefundBizContentDomainModel.refund_reason">
            <summary>
            退款的原因说明
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.Pay.AliRefundBizContentDomainModel.out_request_no">
            <summary>
            退款标识 部分退款是必须提供
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.Pay.AliRefundBizContentDomainModel.operator_id">
            <summary>
            操作员Id
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.woa.OpenIdList.openid">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.woa.WOAUserListItemRequest.openid">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.woa.WOAUserListItemRequest.lang">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.woa.WOAUserOpenidDoaminModel.total">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.woa.WOAUserOpenidDoaminModel.count">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.woa.WOAUserOpenidDoaminModel.data">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.woa.WOAUserOpenidDoaminModel.next_openid">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.woa.WOAUserInfoListResponsDoaminModel.user_info_list">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.woa.WOAUserInfoDoaminModel.Subscribe">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.woa.WOAUserInfoDoaminModel.Openid">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.woa.WOAUserInfoDoaminModel.Nickname">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.woa.WOAUserInfoDoaminModel.Sex">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.woa.WOAUserInfoDoaminModel.Language">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.woa.WOAUserInfoDoaminModel.City">
            <summary>
            深圳
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.woa.WOAUserInfoDoaminModel.Province">
            <summary>
            广东
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.woa.WOAUserInfoDoaminModel.Country">
            <summary>
            中国
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.woa.WOAUserInfoDoaminModel.Headimgurl">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.woa.WOAUserInfoDoaminModel.Subscribe_time">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.woa.WOAUserInfoDoaminModel.Remark">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.woa.WOAUserInfoDoaminModel.Groupid">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.woa.WOAUserInfoDoaminModel.Tagid_list">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.woa.WOAUserInfoDoaminModel.Subscribe_scene">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.woa.WOAUserInfoDoaminModel.Qr_scene">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.woa.WOAUserInfoDoaminModel.Qr_scene_str">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.woa.TemplateResponseDomainModel.Errcode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.woa.TemplateResponseDomainModel.Errmsg">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.woa.TemplateResponseDomainModel.Msgid">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.woa.Miniprogram.appid">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.woa.Miniprogram.pagepath">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.woa.TemplateRequestDomainModel.touser">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.woa.TemplateRequestDomainModel.template_id">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.woa.TemplateRequestDomainModel.miniprogram">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Helpers.WeiXin.woa.TemplateRequestDomainModel.data">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Helpers.MPWXPayDomainModel.AppId">
            <summary>
            appid
            </summary>
        </member>
        <member name="P:Core.Helpers.MPWXPayDomainModel.NonceStr">
            <summary>
            随机字符串
            </summary>
        </member>
        <member name="P:Core.Helpers.MPWXPayDomainModel.PaySign">
            <summary>
            签名字符串
            </summary>
        </member>
        <member name="P:Core.Helpers.MPWXPayDomainModel.SignType">
            <summary>
            签名加密类型
            </summary>
        </member>
        <member name="P:Core.Helpers.MPWXPayDomainModel.TimeStamp">
            <summary>
            时间戳
            </summary>
        </member>
        <member name="P:Core.Helpers.MPWXPayDomainModel.BillId">
            <summary>
            订单
            </summary>
        </member>
        <member name="P:Core.Helpers.WXMPCodeToSessionDomainModel.Openid">
            <summary>
            用户唯一标识
            </summary>
        </member>
        <member name="P:Core.Helpers.WXMPCodeToSessionDomainModel.Session_Key">
            <summary>
            会话密钥
            </summary>
        </member>
        <member name="P:Core.Helpers.WXMPCodeToSessionDomainModel.Unionid">
            <summary>
            用户在开放平台的唯一标识符，在满足 UnionID 下发条件的情况下会返回，详见 UnionID 机制说明。	
            </summary>
        </member>
        <member name="P:Core.Helpers.WXMPCodeToSessionDomainModel.Errcode">
            <summary>
            错误码
            </summary>
        </member>
        <member name="P:Core.Helpers.WXMPCodeToSessionDomainModel.ErrMsg">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="P:Core.Helpers.WXMPUserInfoDomainModel.OpenId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Helpers.WXOpenAccessTokenDomainModel.Access_Token">
            <summary>
            接口调用凭证
            </summary>
        </member>
        <member name="P:Core.Helpers.WXOpenAccessTokenDomainModel.Expires_In">
            <summary>
            access_token接口调用凭证超时时间，单位（秒）
            </summary>
        </member>
        <member name="P:Core.Helpers.WXOpenAccessTokenDomainModel.Refresh_Token">
            <summary>
            用户刷新access_token
            </summary>
        </member>
        <member name="P:Core.Helpers.WXOpenAccessTokenDomainModel.Openid">
            <summary>
            授权用户唯一标识
            </summary>
        </member>
        <member name="P:Core.Helpers.WXOpenAccessTokenDomainModel.Scope">
            <summary>
            用户授权的作用域，使用逗号（,）分隔
            </summary>
        </member>
        <member name="P:Core.Helpers.WXOpenAccessTokenDomainModel.Unionid">
            <summary>
            当且仅当该网站应用已获得该用户的userinfo授权时，才会出现该字段。
            </summary>
        </member>
        <member name="P:Core.Helpers.WXOpenUserinfoDomainModel.Openid">
            <summary>
            普通用户的标识，对当前开发者帐号唯一
            </summary>
        </member>
        <member name="P:Core.Helpers.WXOpenUserinfoDomainModel.Nickname">
            <summary>
            普通用户昵称
            </summary>
        </member>
        <member name="P:Core.Helpers.WXOpenUserinfoDomainModel.Sex">
            <summary>
            普通用户性别，1为男性，2为女性
            </summary>
        </member>
        <member name="P:Core.Helpers.WXOpenUserinfoDomainModel.Province">
            <summary>
            普通用户个人资料填写的省份
            </summary>
        </member>
        <member name="P:Core.Helpers.WXOpenUserinfoDomainModel.City">
            <summary>
            普通用户个人资料填写的城市
            </summary>
        </member>
        <member name="P:Core.Helpers.WXOpenUserinfoDomainModel.Country">
            <summary>
            国家，如中国为CN
            </summary>
        </member>
        <member name="P:Core.Helpers.WXOpenUserinfoDomainModel.Headimgurl">
            <summary>
            用户头像，最后一个数值代表正方形头像大小（有0、46、64、96、132数值可选，0代表640*640正方形头像），用户没有头像时该项为空
            </summary>
        </member>
        <member name="P:Core.Helpers.WXOpenUserinfoDomainModel.Privilege">
            <summary>
            用户特权信息，json数组，如微信沃卡用户为（chinaunicom）
            </summary>
        </member>
        <member name="P:Core.Helpers.WXOpenUserinfoDomainModel.Unionid">
            <summary>
            用户统一标识。针对一个微信开放平台帐号下的应用，同一用户的unionid是唯一的。
            </summary>
        </member>
        <member name="P:Core.Helpers.JsApiParams.AppId">
            <summary>
            公众号id
            </summary>
        </member>
        <member name="P:Core.Helpers.JsApiParams.TimeStamp">
            <summary>
            时间戳
            </summary>
        </member>
        <member name="P:Core.Helpers.JsApiParams.NonceStr">
            <summary>
            随机字符串
            </summary>
        </member>
        <member name="P:Core.Helpers.JsApiParams.Package">
            <summary>
            订单详情扩展字符串,统一下单接口返回的prepay_id参数值，提交格式如：prepay_id=***
            </summary>
        </member>
        <member name="P:Core.Helpers.JsApiParams.SignType">
            <summary>
            签名方式,签名算法，暂支持MD5
            </summary>
        </member>
        <member name="P:Core.Helpers.JsApiParams.PaySign">
            <summary>
            签名
            </summary>
        </member>
        <member name="M:Core.Helpers.JsApiParams.MakeSign(System.String)">
            <summary>
            jsApiParams实体会返回给调用方，所以key不能做为属性
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Core.Helpers.WxDataFormat.SetValue(System.String,System.Object)">
                    * 设置某个字段的值
                    * @param key 字段名
                     * @param value 字段值
        </member>
        <member name="M:Core.Helpers.WxDataFormat.GetValue(System.String)">
                    * 根据字段名获取某个字段的值
                    * @param key 字段名
                     * @return key对应的字段值
        </member>
        <member name="M:Core.Helpers.WxDataFormat.IsSet(System.String)">
            判断某个字段是否已设置
            @param key 字段名
            @return 若字段key已被设置，则返回true，否则返回false
        </member>
        <member name="M:Core.Helpers.WxDataFormat.ToXml">
             @将Dictionary转成xml
             @return 经转换得到的xml串
             @throws Exception
            
        </member>
        <member name="M:Core.Helpers.WxDataFormat.FromXml(System.String)">
            @将xml转为WxData对象并返回对象内部的数据
            @param string 待转换的xml串
            @return 经转换得到的Dictionary
            @throws Exception
        </member>
        <member name="M:Core.Helpers.WxDataFormat.ToUrl">
            @Dictionary格式转化成url参数格式
            @ return url格式串, 该串不包含sign字段值
        </member>
        <member name="M:Core.Helpers.WxDataFormat.ToJson">
                    * @Dictionary格式化成Json
                     * @return json串数据
        </member>
        <member name="M:Core.Helpers.WxDataFormat.ToPrintStr">
            @values格式化成能在Web页面上显示的结果（因为web页面上不能直接输出xml格式的字符串）
        </member>
        <member name="M:Core.Helpers.WxDataFormat.MakeSign(System.String)">
            @生成签名，详见签名生成算法
            @return 签名, sign字段不参加签名
        </member>
        <member name="M:Core.Helpers.WxDataFormat.CheckSign(System.String)">
            
            检测签名是否正确
            正确返回true，错误抛异常
        </member>
        <member name="M:Core.Helpers.WxDataFormat.GetValues">
            @获取Dictionary
        </member>
        <member name="F:Core.Helpers.PayUrlConfig.UnifiedorderUrl">
            <summary>
            统一下单接口地址
            </summary>
        </member>
        <member name="F:Core.Helpers.PayUrlConfig.MicroPayUrl">
            <summary>
            扫码支付地址
            </summary>
        </member>
        <member name="F:Core.Helpers.PayUrlConfig.Gethbinfo">
            <summary>
            红包查询接口地址
            </summary>
        </member>
        <member name="F:Core.Helpers.PayUrlConfig.OrderQuery">
            <summary>
            订单查询接口
            </summary>
        </member>
        <member name="F:Core.Helpers.PayUrlConfig.RefundUrl">
            <summary>
            退款接口
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderRequestDomainModel.AppId">
            <summary>
            公众账号ID 必填
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderRequestDomainModel.MchId">
            <summary>
            商户号 必填
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderRequestDomainModel.DeviceInfo">
            <summary>
            选填 自定义参数，可以为终端设备号(门店号或收银设备ID)，PC网页或公众号内支付可以传"WEB"，String(32)如：013467007045764
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderRequestDomainModel.NonceStr">
            <summary>
            随机字符串 必填
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderRequestDomainModel.SignType">
            <summary>
            选填 签名类型，默认为MD5，支持HMAC-SHA256和MD5。（使用默认）
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderRequestDomainModel.Body">
            <summary>
            必填 商品信息
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderRequestDomainModel.Detail">
             <summary>
             选填 商品详细列表，使用Json格式，传输签名前请务必使用CDATA标签将JSON文本串保护起来。
            cost_price Int 可选 32 订单原价，商户侧一张小票订单可能被分多次支付，订单原价用于记录整张小票的支付金额。当订单原价与支付金额不相等则被判定为拆单，无法享/受/优/惠。
             receipt_id String 可选 32 商家小票ID
            goods_detail 服务商必填[]：
            └ goods_id String 必填 32 商品的编号
            └ wxpay_goods_id String 可选 32 微信支付定义的统一商品编号
            └ goods_name String 可选 256 商品名称 
            └ quantity Int 必填  32 商品数量
            └ price Int 必填 32 商品单价，如果商户有优惠，需传输商户优惠后的单价
            注意：单品总金额应&lt;=订单总金额total_fee，否则会无法享受优惠。
             String(6000)
             </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderRequestDomainModel.Attach">
            <summary>
            选填 附加数据，在查询API和支付通知中原样返回，可作为自定义参数使用。String(127)，如：深圳分店
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderRequestDomainModel.FeeType">
            <summary>
            选填 符合ISO 4217标准的三位字母代码，默认人民币：CNY，详细列表请参见货币类型。String(16)，如：CNY
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderRequestDomainModel.OutTradeNo">
            <summary>
            必填 商家订单号
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderRequestDomainModel.TotalFee">
            <summary>
            必填 商品金额,以分为单位(money * 100).ToString()
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderRequestDomainModel.SpbillCreateIP">
            <summary>
            必填 用户的公网ip，不是商户服务器IP。（如果实在或者不到就填随便。如8.8.8.8）
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderRequestDomainModel.TimeStart">
            <summary>
            选填
            订单生成时间，最终生成格式为yyyyMMddHHmmss，如2009年12月25日9点10分10秒表示为20091225091010。其他详见时间规则。
            如果为空，则默认为当前服务器时间
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderRequestDomainModel.TimeExpire">
            <summary>
            选填
            订单失效时间，格式为yyyyMMddHHmmss，如2009年12月27日9点10分10秒表示为20091227091010。其他详见时间规则
            注意：最短失效时间间隔必须大于5分钟。
            留空则不设置失效时间
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderRequestDomainModel.GoodsTag">
            <summary>
            选填 商品标记，使用代金券或立减优惠功能时需要的参数，说明详见代金券或立减优惠。String(32)，如：WXG
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderRequestDomainModel.NotifyUrl">
            <summary>
            必填 接收财付通通知的URL
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderRequestDomainModel.WxTradeType">
            <summary>
            必填 交易类型
            JSAPI--公众号支付、NATIVE--原生扫码支付、APP--app支付，统一下单接口trade_type的传参可参考这里
            MICROPAY--刷卡支付，刷卡支付有单独的支付接口，不调用统一下单接口
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderRequestDomainModel.ProductId">
            <summary>
            选填 trade_type=NATIVE时（即扫码支付），此参数必传。此参数为二维码中包含的商品ID，商户自行定义。
            String(32)，如：12235413214070356458058
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderRequestDomainModel.LimitPay">
            <summary>
            选填 上传此参数no_credit--可限制用户不能使用信用卡支付
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderRequestDomainModel.Openid">
            <summary>
            选/必填 用户的Openid,trade_type=JSAPI时（即公众号支付），此参数必传
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderRequestDomainModel.Key">
            <summary>
            必填
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderResponseDomainModel.ReturnCode">
            <summary>
            返回状态码，必填，SUCCESS/FAIL此字段是通信标识，非交易标识，交易是否成功需要查看result_code来判断
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderResponseDomainModel.ReturnMsg">
            <summary>
            返回信息，选填，返回信息，如非空，为错误原因签名失败参数格式校验错误
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderResponseDomainModel.Appid">
            <summary>
            公众账号ID，必填，调用接口提交的公众账号ID
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderResponseDomainModel.MchId">
            <summary>
            商户号，必填，调用接口提交的商户号
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderResponseDomainModel.DeviceInfo">
            <summary>
            设备号，选填，自定义参数，可以为请求支付的终端设备号等
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderResponseDomainModel.NonceStr">
            <summary>
            随机字符串，必填，微信返回的随机字符串
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderResponseDomainModel.Sign">
            <summary>
            签名，必填，微信返回的签名值
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderResponseDomainModel.ResultCode">
            <summary>
            业务结果，必填，SUCCESS/FAIL
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderResponseDomainModel.ErrCode">
            <summary>
            错误代码，选填，详细参见下文错误列表
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderResponseDomainModel.ErrCodeDes">
            <summary>
            错误代码描述，选填，错误信息描述
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderResponseDomainModel.TradeType">
            <summary>
            交易类型，必填，交易类型，取值为：JSAPI，NATIVE，APP等
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderResponseDomainModel.PrepayId">
            <summary>
            预支付交易会话标识，必填，微信生成的预支付会话标识，用于后续接口调用中使用，该值有效期为2小时
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderResponseDomainModel.CodeUrl">
            <summary>
            二维码链接，选填，trade_type为NATIVE时有返回，用于生成二维码，展示给用户进行扫码支付
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderFacilitatorRequestDomainModel.Key">
            <summary>
            API密钥Sign加密使用 必填 
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderFacilitatorRequestDomainModel.AppId">
            <summary>
            服务商ID 必填 wxd678efh567hg6787 微信分配的公众账号ID
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderFacilitatorRequestDomainModel.MchId">
            <summary>
            商户号 必填 1230000109	微信支付分配的商户号
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderFacilitatorRequestDomainModel.SubAppid">
            <summary>
            小程序的APPID 必填 wx8888888888888888 当前调起支付的小程序APPID
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderFacilitatorRequestDomainModel.SubMchId">
            <summary>
            子商户号 必填 1900000109	微信支付分配的子商户号
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderFacilitatorRequestDomainModel.DeviceInfo">
            <summary>
            设备号 终端设备号(门店号或收银设备ID)，注意：PC网页或公众号内支付请传"WEB"
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderFacilitatorRequestDomainModel.NonceStr">
            <summary>
            随机字符串 必填 5K8264ILTKCH16CQ2502SI8ZNMTM67VS 随机字符串，不长于32位。推荐随机数生成算法
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderFacilitatorRequestDomainModel.Sign">
            <summary>
            签名 必填 C380BEC2BFD727A4B6845133519F3AD6 签名，详见签名生成算法
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderFacilitatorRequestDomainModel.SignType">
            <summary>
            签名类型  HMAC-SHA256 签名类型，目前支持HMAC-SHA256和MD5，默认为MD5
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderFacilitatorRequestDomainModel.Body">
            <summary>
            商品简单描述 必填 	商家名称-销售商品类目
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderFacilitatorRequestDomainModel.Detail">
            <summary>
            商品详情 商品详细描述，对于使用单品优惠的商户，改字段必须按照规范上传，详见
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderFacilitatorRequestDomainModel.Attach">
            <summary>
            附加数据 附加数据，在查询API和支付通知中原样返回，该字段主要用于商户携带订单的自定义数据
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderFacilitatorRequestDomainModel.OutTradeNo">
            <summary>
            商户订单号 必填 1217752501201407033233368018	商户系统内部订单号，要求32个字符内，只能是数字、大小写字母_-|*且在同一个商户号下唯一。详见商户订单号
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderFacilitatorRequestDomainModel.FeeType">
            <summary>
            货币类型 CNY 符合ISO 4217标准的三位字母代码，默认人民币：CNY，其他值列表详见货币类型
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderFacilitatorRequestDomainModel.TotalFee">
            <summary>
            总金额 必填 订单总金额，只能为整数
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderFacilitatorRequestDomainModel.SpbillCreateIP">
            <summary>
            终端IP 必填 APP和H5支付提交用户端ip，Native支付填调用微信支付API的机器IP。
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderFacilitatorRequestDomainModel.TimeStart">
            <summary>
            交易起始时间 订单生成时间，格式为yyyyMMddHHmmss，如2009年12月25日9点10分10秒表示为20091225091010。其他详见时间规则
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderFacilitatorRequestDomainModel.TimeExpire">
            <summary>
            交易结束时间
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderFacilitatorRequestDomainModel.goods_tag">
            <summary>
            订单优惠标记
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderFacilitatorRequestDomainModel.NotifyUrl">
            <summary>
            通知地址 必填 接收微信支付异步通知回调地址，通知url必须为直接可访问的url，不能携带参数。
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderFacilitatorRequestDomainModel.TradeType">
            <summary>
            交易类型 必填 小程序取值如下：JSAPI，详细说明见参数规定
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderFacilitatorRequestDomainModel.LimitPay">
            <summary>
            指定支付方式 no_credit--指定不能使用信用卡支付
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderFacilitatorRequestDomainModel.Openid">
            <summary>
            用户标识 trade_type = JSAPI，此参数必传，用户在商户appid下的唯一标识。openid如何获取，可参考【获取openid】。
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderFacilitatorRequestDomainModel.SubOpenid">
            <summary>
            用户子标识  trade_type = JSAPI，此参数必传，用户在子商户appid下的唯一标识。openid和sub_openid可以选传其中之一，如果选择传sub_openid,则必须传sub_appid。下单前需要调用【网页授权获取用户信息】接口获取到用户的Openid。
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderFacilitatorRequestDomainModel.Receipt">
            <summary>
            电子发票入口开放标识  Y Y，传入Y时，支付成功消息和支付详情页将出现开票入口。需要在微信支付商户平台或微信公众平台开通电子发票功能，传此字段才可生效
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderFacilitatorResponseDomainModel.ReturnCode">
            <summary>
            返回状态码，必填，SUCCESS/FAIL此字段是通信标识，非交易标识，交易是否成功需要查看result_code来判断
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderFacilitatorResponseDomainModel.ReturnMsg">
            <summary>
            返回信息，选填，返回信息，如非空，为错误原因签名失败参数格式校验错误
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderFacilitatorResponseDomainModel.Appid">
            <summary>
            公众账号ID，必填，调用接口提交的公众账号ID
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderFacilitatorResponseDomainModel.MchId">
            <summary>
            商户号，必填，调用接口提交的商户号
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderFacilitatorResponseDomainModel.SubAppid">
            <summary>
            微信分配的小程序ID
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderFacilitatorResponseDomainModel.SubMchId">
            <summary>
            微信支付分配的子商户号
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderFacilitatorResponseDomainModel.DeviceInfo">
            <summary>
            设备号，选填，自定义参数，可以为请求支付的终端设备号等
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderFacilitatorResponseDomainModel.NonceStr">
            <summary>
            随机字符串，必填，微信返回的随机字符串
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderFacilitatorResponseDomainModel.Sign">
            <summary>
            签名，必填，微信返回的签名值
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderFacilitatorResponseDomainModel.ResultCode">
            <summary>
            业务结果，必填，SUCCESS/FAIL
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderFacilitatorResponseDomainModel.ErrCode">
            <summary>
            错误代码，选填，详细参见下文错误列表
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderFacilitatorResponseDomainModel.ErrCodeDes">
            <summary>
            错误代码描述，选填，错误信息描述
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderFacilitatorResponseDomainModel.TradeType">
            <summary>
            交易类型，必填，交易类型，取值为：JSAPI，NATIVE，APP等
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderFacilitatorResponseDomainModel.PrepayId">
            <summary>
            预支付交易会话标识，必填，微信生成的预支付会话标识，用于后续接口调用中使用，该值有效期为2小时
            </summary>
        </member>
        <member name="P:Core.Helpers.UnifiedorderFacilitatorResponseDomainModel.CodeUrl">
            <summary>
            二维码链接，选填，trade_type为NATIVE时有返回，用于生成二维码，展示给用户进行扫码支付
            </summary>
        </member>
        <member name="M:Core.Helpers.WeiXinHelper.WxOpenInfo(System.String,System.String,System.String)">
            <summary>
            微信开放平台根据code 获取微信用户信息
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.WeiXinHelper.GetOpenAccessToken(System.String,System.String,System.String)">
            <summary>
            微信开放平台通过code获取access
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.WeiXinHelper.WXMPCodeToSession(System.String,System.String,System.String)">
            <summary>
            微信小程序根据
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.WeiXinHelper.AES_decrypt(System.String,System.String,System.String)">
            <summary>
            解密
            </summary>
            <param name="encryptedDataStr"></param>
            <param name="key"></param>
            <param name="iv"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.WeiXinHelper.GetMPAccessToken(System.String,System.String)">
            <summary>
            小程序获取AccessToken 缓存1.5小时
            </summary>
            <param name="appid"></param>
            <param name="appSecret"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.WeiXinHelper.MPQrCode(System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            二维码base64
            </summary>
            <param name="scene"></param>
            <param name="page"></param>
            <param name="width"></param>
            <param name="auto_color"></param>
            <param name="line_color"></param>
            <param name="is_hyaline"></param>
            <param name="appid"></param>
            <param name="appSecret"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.WeiXinHelper.TemplateMessageSend(Core.Helpers.WeiXin.MP.TemplateMessageSendReuestDomainModel)">
            <summary>
            小程序信息推送
            </summary>
            <param name="req"></param>
        </member>
        <member name="M:Core.Helpers.WeiXinHelper.UnifiedorderAsync(Core.Helpers.UnifiedorderRequestDomainModel)">
            <summary>
            统一下单
            wxPayData的参数参考官网：https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=9_1
            统一支付接口，可接受JSAPI/NATIVE/APP 下预支付订单，返回预支付订单号。NATIVE 支付返回二维码code_url。
            </summary>
            <param name="wxPayData">统一下单的调用参数</param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.WeiXinHelper.FacilitatorUnifiedorderAsync(Core.Helpers.UnifiedorderFacilitatorRequestDomainModel)">
            <summary>
            服务商模式使用
            </summary>
            <param name="req"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.WeiXinHelper.ToWxFacilitatorPayData(Core.Helpers.UnifiedorderFacilitatorRequestDomainModel)">
            <summary>
            服务商模式使用
            </summary>
            <param name="req"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.WeiXinHelper.WxMchRefundAsync(Core.Helpers.WeiXin.Pay.RefundMchRequestDomainModel)">
            <summary>
            服务商退款
            </summary>
            <param name="req"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.WeiXinHelper.GetWOAAccessToken(System.String,System.String)">
            <summary>
             公众号获取AccessToken 缓存1.5小时
            </summary>
            <param name="appid"></param>
            <param name="appSecret"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.WeiXinHelper.GetWOAUserOpenIdList(System.String,System.String)">
            <summary>
            获取订阅用户的openid
            </summary>
            <param name="accessToken"></param>
            <param name="nextOpenid"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.WeiXinHelper.GetWOAUserInfoListAsync(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            获取用户的详细信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.WeiXinHelper.SendTemplate(System.String,System.String,System.Object,System.Collections.Generic.List{System.String},Core.Helpers.WeiXin.woa.Miniprogram,System.String)">
            <summary>
            
            </summary>
            <param name="accessToken"></param>
            <param name="temId"></param>
            <param name="data"> "data":{"first": {"value":"您收到新的通知","color":"#173177"},"keyword1":{"value":"采购部","color":"#173177"},"remark":{"value":"期待您的参与！","color":"#173177"}}</param>
            <param name="openId"></param>
            <param name="mp"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Helpers.XmlCommentsFilePathHelper.XmlCommentsFilePath">
            <summary>
            获取xml
            </summary>
        </member>
        <member name="T:Core.Models.DBModels.ChatMember">
            <summary>
            ChatMember
            (成员表chat_member)
            </summary>
        </member>
        <member name="P:Core.Models.DBModels.ChatMember.MemId">
            <summary>
            成员主键
            </summary>
        </member>
        <member name="P:Core.Models.DBModels.ChatMember.SubId">
            <summary>
            关注主键值
            </summary>
        </member>
        <member name="P:Core.Models.DBModels.ChatMember.MemCheckCard">
            <summary>
            病例号
            </summary>
        </member>
        <member name="P:Core.Models.DBModels.ChatMember.MemName">
            <summary>
            成员姓名
            </summary>
        </member>
        <member name="P:Core.Models.DBModels.ChatMember.Sex">
            <summary>
            0:男1:女
            </summary>
        </member>
        <member name="P:Core.Models.DBModels.ChatMember.MemCard">
            <summary>
            成员身份证
            </summary>
        </member>
        <member name="P:Core.Models.DBModels.ChatMember.MedAddress">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Models.DBModels.ChatMember.ParentName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Models.DBModels.ChatMember.Birthday">
            <summary>
            生日
            </summary>
        </member>
        <member name="P:Core.Models.DBModels.ChatMember.RelationUsers">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:Core.Models.DBModels.ChatMember.HospCode">
            <summary>
            医院编码
            </summary>
        </member>
        <member name="P:Core.Models.DBModels.ChatMember.MemTel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Models.DBModels.ChatMember.IsUse">
            <summary>
            是否有效，1有效，0无效，2审批中
            </summary>
        </member>
        <member name="P:Core.Models.DBModels.ChatMember.IsDefault">
            <summary>
            默认就诊人
            </summary>
        </member>
        <member name="P:Core.Models.DBModels.ChatMember.IsAuth">
            <summary>
            是否认证
            </summary>
        </member>
        <member name="P:Core.Models.DBModels.ChatMember.IdPhotoUrl">
            <summary>
            身份证照片路径
            </summary>
        </member>
        <member name="P:Core.Models.DBModels.ChatMember.IsChild">
            <summary>
            是否是小孩
            </summary>
        </member>
        <member name="T:Core.Models.DBModels.ChatUser">
            <summary>
            ChatUser
            (微信关注表chat_user)
            </summary>
        </member>
        <member name="P:Core.Models.DBModels.ChatUser.SubId">
            <summary>
            关注主键值
            </summary>
        </member>
        <member name="P:Core.Models.DBModels.ChatUser.Openid">
            <summary>
            OpenID
            </summary>
        </member>
        <member name="P:Core.Models.DBModels.ChatUser.Nickname">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:Core.Models.DBModels.ChatUser.Sex">
            <summary>
            性别
            </summary>
        </member>
        <member name="P:Core.Models.DBModels.ChatUser.Province">
            <summary>
            省份
            </summary>
        </member>
        <member name="P:Core.Models.DBModels.ChatUser.City">
            <summary>
            城市
            </summary>
        </member>
        <member name="P:Core.Models.DBModels.ChatUser.Headimgurl">
            <summary>
            头像
            </summary>
        </member>
        <member name="P:Core.Models.DBModels.ChatUser.Unionid">
            <summary>
            只有在用户将公众号绑定到微信开放平台帐号后，才会出现该字段。
            </summary>
        </member>
        <member name="P:Core.Models.DBModels.ChatUser.State">
            <summary>
            状态(1:关注,0:取消关注)
            </summary>
        </member>
        <member name="P:Core.Models.DBModels.ChatUser.SubTime">
            <summary>
            关注日期
            </summary>
        </member>
        <member name="P:Core.Models.DBModels.ChatUser.HospCode">
            <summary>
            医院编码
            </summary>
        </member>
        <member name="P:Core.Models.DBModels.ChatUser.SubType">
            <summary>
            用户类型,0:微信,1:支付宝
            </summary>
        </member>
        <member name="T:Core.Models.DBModels.RegisterHealthCardInfo">
            <summary>
            RegisterHealthCardInfo
            ()
            </summary>
        </member>
        <member name="P:Core.Models.DBModels.RegisterHealthCardInfo.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Models.DBModels.RegisterHealthCardInfo.Openid">
            <summary>
            微信openid
            </summary>
        </member>
        <member name="P:Core.Models.DBModels.RegisterHealthCardInfo.Patid">
            <summary>
            医院id
            </summary>
        </member>
        <member name="P:Core.Models.DBModels.RegisterHealthCardInfo.QrcodeText">
            <summary>
            二维码文本根据当地卫健委要求返回静态码或动态码
            </summary>
        </member>
        <member name="P:Core.Models.DBModels.RegisterHealthCardInfo.HealthCardId">
            <summary>
            健康卡ID
            </summary>
        </member>
        <member name="P:Core.Models.DBModels.RegisterHealthCardInfo.Phid">
            <summary>
            主索引ID根据当地卫健委要求返回或者不返回
            </summary>
        </member>
        <member name="P:Core.Models.DBModels.RegisterHealthCardInfo.AdminExt">
            <summary>
            扩展字段返回卡管注册接口响应包的全部内容（不含图片数据）
            </summary>
        </member>
        <member name="P:Core.Models.DBModels.RegisterHealthCardInfo.IdNumber">
            <summary>
            证件号码	
            </summary>
        </member>
        <member name="P:Core.Models.DBModels.RegisterHealthCardInfo.IdType">
            <summary>
            证件类型
            </summary>
        </member>
        <member name="P:Core.Models.DBModels.RegisterHealthCardInfo.Type">
            <summary>
            注册类型 1新用户 2批量注册
            </summary>
        </member>
        <member name="P:Core.Models.DBModels.RegisterHealthCardInfo.CreateTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Models.DBModels.RegisterHealthCardInfo.MemId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:Core.Models.DBModels.RegisterHealthCardInfo.Phone">
            <summary>
            电话
            </summary>
        </member>
        <member name="P:Core.Models.DBModels.RegisterHealthCardInfo.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="T:Core.UnifiedResponseMessage.JsonContentNegotiator.PropertySortResolver">
            <summary>
            输出到json字符串时，属性名称按照字典顺序排序输出
            </summary>
        </member>
        <member name="M:Core.UnifiedResponseMessage.JsonContentNegotiator.PropertySortResolver.CreateProperties(System.Type,Newtonsoft.Json.MemberSerialization)">
            <summary>
            属性名称按照字典顺序排序输出
            </summary>
            <param name="type"></param>
            <param name="memberSerialization"></param>
            <returns></returns>
        </member>
        <member name="P:Core.UnifiedResponseMessage.PageResponse.total">
            <summary>
            总条数
            </summary>
        </member>
        <member name="P:Core.UnifiedResponseMessage.PageResponse.currentPage">
            <summary>
            当前页索引
            </summary>
        </member>
        <member name="P:Core.UnifiedResponseMessage.PageResponse.pageSize">
            <summary>
            页大小
            </summary>
        </member>
        <member name="P:Core.UnifiedResponseMessage.PageResponse.pageCount">
            <summary>
            当页条数
            </summary>
        </member>
        <member name="P:Core.UnifiedResponseMessage.PageTotals.Total">
            <summary>
            
            </summary>
        </member>
        <member name="M:Core.WebSockets.WebSocketExtensions.MapWebSocketManager``1(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Http.PathString,Core.WebSockets.WebSocketHandler)">
            <summary>
            注册中间件
            </summary>
            <typeparam name="T"></typeparam>
            <param name="app"></param>
            <param name="path"></param>
            <param name="handler"></param>
            <returns></returns>
        </member>
        <member name="M:Core.WebSockets.WebSocketExtensions.AddWebSocketManager(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
    </members>
</doc>
